{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-09-10T05:55:24.595Z",
    "end": "2025-09-10T05:55:26.718Z",
    "duration": 2123,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "03c5ecb9-0b3e-4038-b5b8-b1090f92a2d8",
      "title": "",
      "fullFile": "cypress/e2e/task1_e2e_purchase_flow.cy.ts",
      "file": "cypress/e2e/task1_e2e_purchase_flow.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b1d3b718-6ed9-4ace-ba20-356e277cce47",
          "title": "Task 1: End-to-End Purchase Flow from API-created user",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should login, purchase products, and download invoice",
              "fullTitle": "Task 1: End-to-End Purchase Flow from API-created user should login, purchase products, and download invoice",
              "timedOut": null,
              "duration": 227,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/task1_e2e_purchase_flow.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/task1_e2e_purchase_flow.cy.ts/Task 1 End-to-End Purchase Flow from API-created user -- should login, purchase products, and download invoice (failed).png\"\n      ],\n      [\n        \"/task1_e2e_purchase_flow.cy.ts/Task 1 End-to-End Purchase Flow from API-created user -- should login, purchase products, and download invoice (failed) (attempt 2).png\"\n      ],\n      [\n        \"/task1_e2e_purchase_flow.cy.ts/Task 1 End-to-End Purchase Flow from API-created user -- should login, purchase products, and download invoice (failed) (attempt 3).png\"\n      ]\n    ]\n  }\n]",
              "code": "// Navigate to the URL\nhomePage.visit();\n// Retrieve credentials and login\ncy.fixture('user_credentials.json').then(function (credentials) {\n    homePage.clickLoginButton();\n    loginPage.login(credentials.email, credentials.password);\n});\nhomePage.verifyLoggedInAs(user.firstName);\n// Add two products to cart\nproductsPage.addFirstProductToCart();\ncy.get('button.close-modal').click();\nproductsPage.addSecondProductToCart();\ncy.get('button.close-modal').click();\n// View cart and proceed to checkout\nhomePage.clickCartButton();\ncy.url().should('include', '/view_cart');\ncheckoutPage.clickProceedToCheckout();\n// Place order\ncheckoutPage.enterComment('E2E test order.');\ncheckoutPage.clickPlaceOrder();\n// Enter payment details\ncheckoutPage.enterPaymentDetails(faker_1.faker.finance.accountName(), faker_1.faker.finance.creditCardNumber(), faker_1.faker.finance.creditCardCVV(), String(faker_1.faker.date.future().getMonth() + 1), String(faker_1.faker.date.future().getFullYear()));\n// Confirm order\ncheckoutPage.clickPayAndConfirmOrder();\ncheckoutPage.verifyOrderPlacedSuccessMessage();\n// Download and verify invoice\ncy.contains('Download Invoice', { timeout: 10000 })\n    .should('be.visible')\n    .then(function ($el) {\n    var invoiceUrl = $el.attr('href');\n    cy.task('downloadFile', {\n        url: \"http://automationexercise.com\".concat(invoiceUrl),\n        directory: 'cypress/downloads',\n        filename: 'invoice.pdf',\n    });\n});\ncy.readFile('cypress/downloads/invoice.pdf', 'binary', { timeout: 15000 }).should(function (buffer) {\n    expect(buffer.length).to.be.greaterThan(0);\n});\n// Continue and delete account\ncheckoutPage.clickContinueButton();\nhomePage.clickDeleteAccountButton();\nhomePage.verifyAccountDeleted();\nhomePage.clickContinueButton();",
              "err": {
                "message": "TypeError: homePage.visit is not a function",
                "estack": "TypeError: homePage.visit is not a function\n    at Context.eval (webpack://assesstemt/./cypress/e2e/task1_e2e_purchase_flow.cy.ts:59:13)\n    at runnable.fn (https://automationexercise.com/__cypress/runner/cypress_runner.js:141784:19)\n    at callFn (https://automationexercise.com/__cypress/runner/cypress_runner.js:160853:21)\n    at Runnable.run (https://automationexercise.com/__cypress/runner/cypress_runner.js:160840:7)\n    at <unknown> (https://automationexercise.com/__cypress/runner/cypress_runner.js:166935:30)\n    at PassThroughHandlerContext.finallyHandler (https://automationexercise.com/__cypress/runner/cypress_runner.js:4042:23)\n    at PassThroughHandlerContext.tryCatcher (https://automationexercise.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://automationexercise.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://automationexercise.com/__cypress/runner/cypress_runner.js:1546:18)",
                "diff": null
              },
              "uuid": "9d6adcf3-a3ff-4764-92c1-46ec7fd3174c",
              "parentUUID": "b1d3b718-6ed9-4ace-ba20-356e277cce47",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9d6adcf3-a3ff-4764-92c1-46ec7fd3174c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 227,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/.jsons",
        "charts": true,
        "reportPageTitle": "Kinetik QA Assessment",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}