{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 0,
    "pending": 0,
    "failures": 2,
    "start": "2025-09-08T10:27:32.515Z",
    "end": "2025-09-08T10:27:38.557Z",
    "duration": 6042,
    "testsRegistered": 2,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "baff2f7a-fc06-4a82-b07e-f0b1d250cf5f",
      "title": "",
      "fullFile": "cypress/e2e/registration_api.cy.ts",
      "file": "cypress/e2e/registration_api.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d94b8b4b-4d3c-45bd-b194-45e3ec97dcfc",
          "title": "API - User Registration",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should register a new user successfully",
              "fullTitle": "API - User Registration should register a new user successfully",
              "timedOut": null,
              "duration": 691,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/registration_api.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/registration_api.cy.ts/API - User Registration -- should register a new user successfully (failed).png\"\n      ],\n      [\n        \"/registration_api.cy.ts/API - User Registration -- should register a new user successfully (failed) (attempt 2).png\"\n      ],\n      [\n        \"/registration_api.cy.ts/API - User Registration -- should register a new user successfully (failed) (attempt 3).png\"\n      ]\n    ]\n  }\n]",
              "code": "cy.request({\n    method: 'POST',\n    url: \"\".concat(Cypress.env('API_URL'), \"/createAccount\"),\n    form: true,\n    body: {\n        name: 'Test User',\n        email: uniqueEmail,\n        password: 'password123',\n        title: 'Mr',\n        birth_date: '01',\n        birth_month: 'January',\n        birth_year: '1990',\n        firstname: 'Test',\n        lastname: 'User',\n        company: 'Test Company',\n        address1: '123 Test Street',\n        address2: 'Apt 4B',\n        country: 'United States',\n        zipcode: '10001',\n        state: 'New York',\n        city: 'New York',\n        mobile_number: '1234567890'\n    }\n}).then(function (response) {\n    expect(response.status).to.eq(201);\n    expect(response.body).to.include('User created!');\n});",
              "err": {
                "message": "AssertionError: expected 200 to equal 201",
                "estack": "AssertionError: expected 200 to equal 201\n    at Context.eval (webpack://assesstemt/./cypress/e2e/registration_api.cy.ts:29:33)\n    at getRet (https://automationexercise.com/__cypress/runner/cypress_runner.js:121549:20)\n    at tryCatcher (https://automationexercise.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://automationexercise.com/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (https://automationexercise.com/__cypress/runner/cypress_runner.js:121560:66)\n    at Context.then (https://automationexercise.com/__cypress/runner/cypress_runner.js:121811:21)",
                "diff": "- 200\n+ 201\n"
              },
              "uuid": "2a380785-15e6-44a8-a0f2-f2cd6d51804e",
              "parentUUID": "d94b8b4b-4d3c-45bd-b194-45e3ec97dcfc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not allow registration with an existing email",
              "fullTitle": "API - User Registration should not allow registration with an existing email",
              "timedOut": null,
              "duration": 841,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/registration_api.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/registration_api.cy.ts/API - User Registration -- should not allow registration with an existing email (failed).png\"\n      ],\n      [\n        \"/registration_api.cy.ts/API - User Registration -- should not allow registration with an existing email (failed) (attempt 2).png\"\n      ],\n      [\n        \"/registration_api.cy.ts/API - User Registration -- should not allow registration with an existing email (failed) (attempt 3).png\"\n      ]\n    ]\n  }\n]",
              "code": "cy.request({\n    method: 'POST',\n    url: \"\".concat(Cypress.env('API_URL'), \"/createAccount\"),\n    form: true,\n    failOnStatusCode: false,\n    body: {\n        name: 'Test User',\n        email: uniqueEmail,\n        password: 'password123',\n        title: 'Mr',\n        birth_date: '01',\n        birth_month: 'January',\n        birth_year: '1990',\n        firstname: 'Test',\n        lastname: 'User',\n        company: 'Test Company',\n        address1: '123 Test Street',\n        address2: 'Apt 4B',\n        country: 'United States',\n        zipcode: '10001',\n        state: 'New York',\n        city: 'New York',\n        mobile_number: '1234567890'\n    }\n}).then(function (response) {\n    expect(response.status).to.eq(400);\n    expect(response.body).to.include('Email already exists!');\n});",
              "err": {
                "message": "AssertionError: expected 200 to equal 400",
                "estack": "AssertionError: expected 200 to equal 400\n    at Context.eval (webpack://assesstemt/./cypress/e2e/registration_api.cy.ts:60:33)\n    at getRet (https://automationexercise.com/__cypress/runner/cypress_runner.js:121549:20)\n    at tryCatcher (https://automationexercise.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://automationexercise.com/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (https://automationexercise.com/__cypress/runner/cypress_runner.js:121560:66)\n    at Context.then (https://automationexercise.com/__cypress/runner/cypress_runner.js:121811:21)",
                "diff": "- 200\n+ 400\n"
              },
              "uuid": "b1d660e1-c590-439c-b8aa-de66746a9838",
              "parentUUID": "d94b8b4b-4d3c-45bd-b194-45e3ec97dcfc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2a380785-15e6-44a8-a0f2-f2cd6d51804e",
            "b1d660e1-c590-439c-b8aa-de66746a9838"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1532,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/.jsons",
        "charts": true,
        "reportPageTitle": "Kinetik QA Assessment",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}